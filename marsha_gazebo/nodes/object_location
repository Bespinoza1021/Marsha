#!/usr/bin/env python

import rospy

from geometry_msgs.msg import Pose
from marsha_msgs.srv import GetPose
from gazebo_msgs.srv import GetModelState
from marsha_ai.srv import PositionCmd


class LocationServer():
    def __init__(self):
        rospy.init_node('object_publisher')

        self.pub = rospy.Publisher('object_pos', Pose, queue_size=10)
        self.prev_state = None
        self.service = rospy.Service('get_object_pos', GetPose, self.handleObjectPos)
        self.rate = rospy.Rate(50)

        rospy.wait_for_service('/gazebo/get_model_state')


        self.get_state = rospy.ServiceProxy('/gazebo/get_model_state', GetModelState)

    def handleObjectPos(self, req):
        state = None
        try:
            state = self.get_state("pickup_box", "left_ar3::link_6")
        except:
            rospy.logwarn("couldnt get state!")

        if state != None:
            rospy.loginfo(state.pose.position)
            self.prev_state = state
            return state.pose.position
        else:
            rospy.loginfo(self.prev_state.pose.position)
            return self.prev_state.pose.position



    def run(self):
        while not rospy.is_shutdown():
            try:
                object_state = self.get_state("pickup_box", "left_ar3::link_6")

                pose = object_state.pose

                self.pub.publish(pose)
            except:
                rospy.logwarn("Couldnt get state!")


            self.rate.sleep()

if __name__ =='__main__':

    server = LocationServer()

    server.run()

