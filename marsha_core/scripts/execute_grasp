#!/usr/bin/env python

# Finds object with object location and picks it up

# Author: Aaron Borger

import rospy
from marsha_msgs.srv import MoveCmd
from marsha_msgs.srv import GetPosFrame
from marsha_msgs.srv import PositionCmd
from marsha_msgs.srv import GetPos
from marsha_msgs.srv import GenerateGrasp
from marsha_msgs.srv import PostureCmd
from std_srvs.srv import Trigger, TriggerRequest

import tf



from math import pi, sin, cos, sqrt

from geometry_msgs.msg import Pose

#pose_cmd = rospy.ServiceProxy('/left/pose_cmd', MoveCmd)

#rospy.wait_for_service('/left/position_cmd')
position_cmd = rospy.ServiceProxy('/left/position_cmd', PositionCmd)

posture_cmd = rospy.ServiceProxy('/left/posture_cmd', PostureCmd)

grasp_cmd = rospy.ServiceProxy('/left/grasp_cmd', MoveCmd)

get_object_pos = rospy.ServiceProxy('/get_object_pos', GetPosFrame)

#is_grasped = rospy.ServiceProxy('/left/is_grasped', Trigger)

get_pos = rospy.ServiceProxy('/left/get_pos', GetPos)

generate_grasp = rospy.ServiceProxy('/generate_grasp', GenerateGrasp)






def main():
    rospy.init_node('object_pickup')


    object_pos = get_object_pos("left_ar3::world_base").position
    
    grasp_obj_space = generate_grasp(0.5, pi/3, pi/3).grasp



    grasp = Pose()
    grasp.position.x = object_pos.x + grasp_obj_space.position.x
    grasp.position.y = object_pos.y + grasp_obj_space.position.y
    grasp.position.z = object_pos.z + grasp_obj_space.position.z
    grasp.orientation = grasp_obj_space.orientation


    print(grasp)


    success = posture_cmd(grasp).done
    print(success)



if __name__ == "__main__":
    main()

