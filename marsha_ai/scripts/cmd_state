#!/usr/bin/env python

import rospy
from marsha_ai.msg import Pose
from marsha_ai.msg import Position
from marsha_ai.msg import Orientation
import sys


from tf.transformations import quaternion_from_euler

def get_pose_msg(pose_param):
    msg = Pose()
    pos = Position()

    pos_param = pose_param + "/position/"


    pos.x = rospy.get_param(pos_param + "x")
    pos.y = rospy.get_param(pos_param + "y") 
    pos.z = rospy.get_param(pos_param + "z")
    msg.pos = pos

    orient_param = pose_param + "/orientation/"
    orient = Orientation()
    orient.x = rospy.get_param(orient_param + "x")
    orient.y = rospy.get_param(orient_param + "y")
    orient.z = rospy.get_param(orient_param + "z")
    orient.w = rospy.get_param(orient_param + "w")
    msg.orient = orient

    return msg



def command(msg, pos_pub, rate):
    i = 0
    while i < 4:
        pos_pub.publish(msg)
        rospy.logdebug("Sending message")
        rate.sleep()
        i += 1

def main():
    rospy.init_node('Web_ros_interface', log_level=rospy.DEBUG)

    pos_pub = rospy.Publisher('pos_cmd', Pose, queue_size=10)
    rate = rospy.Rate(0.5)

    pose_param = rospy.get_namespace() + "pose/"

    # This pickup is just moving to a pickup location
    # The real pickup will be handled by a deep grasp
    # https://github.com/PickNikRobotics/deep_grasp_demo
    msg = get_pose_msg(pose_param + "pickup")

    command(msg, pos_pub, rate)


    msg = get_pose_msg(pose_param + "handoff")

    command(msg, pos_pub, rate)


    msg = get_pose_msg(pose_param + "pickup")

    command(msg, pos_pub, rate)



if __name__ == "__main__": main()






